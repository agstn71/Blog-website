"use client"

import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "../components/Navbar";
import ReduxProvider from "./ReduxProvider";
import ToastProvider from "./ToastProvider";
import ThemeProvider from "@/components/ThemeProvider";
import Footer from "@/components/Footer";
import { usePathname } from "next/navigation";
import { useEffect } from "react";



const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

 const metadata = {
  title: "My blog app",
  description: "Generated by create next app",
};

const GA_MEASUREMENT_ID = "G-2050SPPRD1";

export default function RootLayout({ children }) {

   const pathname = usePathname();
  // Load GA script once
  
  useEffect(() => {
    // Load GA4 script
    const script1 = document.createElement("script");
    script1.async = true;
    script1.src = `https://www.googletagmanager.com/gtag/js?id=${GA_MEASUREMENT_ID}`;
    document.head.appendChild(script1);

    const script2 = document.createElement("script");
    script2.innerHTML = `
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', '${GA_MEASUREMENT_ID}', { page_path: window.location.pathname });
    `;
    document.head.appendChild(script2);
  }, []);

  // Track SPA route changes
  useEffect(() => {
    if (window.gtag) {
      window.gtag("config", GA_MEASUREMENT_ID, { page_path: pathname });
    }
  }, [pathname]);
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
      <ReduxProvider>
        <ThemeProvider>

           <Navbar/>
          
             {children}
        <Footer/>
          
       
        <ToastProvider></ToastProvider>
        </ThemeProvider>
        
      </ReduxProvider>
        
     
       
      </body>
    </html>
  );
}
